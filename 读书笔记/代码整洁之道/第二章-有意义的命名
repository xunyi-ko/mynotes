写代码的时候，百分之九十以上的时间都是在看既有代码，因此代码的可读性非常重要
    几条命名的规则
    1.名副其实
        变量、方法或类的名称应该已经答复了所有的大问题，它应该告诉你，它为什么会存在，它做什么事，应该怎么用。如果名称需要注释来补充，那就不算是名副其实。
    
    2.避免误导
        应该避免使用与本意相悖的词，而且不要使用两个看起来相似的词，避免读代码的时候很难发现区别。
    3.做有意义的区分
        取名的时候不要仅仅只是加数字，或者无意义的废话，即便这样可以通过编译。如果名称必须不同，那么它们的意思也应该不同才对
        废话都是冗余的，要区分名称，就要以读者能鉴别不同之处的方式来区分。
    4.使用读的出来的名称
        取名的时候不要简单的使用字母的堆叠，尽量用完整的词来做名称，这样方便阅读，方便理解，也方便沟通。
    5.使用可搜索的名称
        名称要取的足够长，足够独特。比如常量，要搜索一段MAX_CLASSES_PER_STUDENT比搜索一个7容易的多。
        如果都使用及其简单且类似的名称，就会在搜索代码的时候造成很大的困扰
    6.类名
        类名和对象名应该是名词或名词短语，如Customer、Account等，避免使用Manager、Processor这样的类名。类名不应当是动词
    7.方法名
        方法名应该是动词或动词短语
    8.每个概念对应一个词
        给每个抽象概念选一个词，并一以贯之
        不要一会用get，一会用find，在不同类中用了不同的词做相同的事，就容易找不到想找到的东西
    9.别用双关语
        别将同一个词用在不同的概念上
    10.添加有意义的语境
        很少有名称是能自我说明的，因此我们需要用有良好命名的类、函数或名称空间来放置名称，给读者提供语境。
    11.不要添加没用的语境
        比如给所有的类加一个前缀。这样等于跟自己过不去。按一下自动完成键，全部都出来了，没有任何意义
  要做有意义的命名
    对类、变量等的命名要尽量表达它的作用，尽量不要用自造词。
    不要用数字、无意义的废话作为名字，避免看不懂
