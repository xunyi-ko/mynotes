本书到目前为止一直在讨论如何编写良好的代码行和代码块。我们深入研究了函数的恰当构成，以及函数之间如何互相关联。
不过，尽管讨论了这么多关于代码语句及由代码语句构成的函数的表达力，除非我们将注意力放到代码组织的更高层面，就始终不能得到整洁的代码

1.类的组织
    遵循标准的java约定，类应该从一组变量列表开始。如果有公共静态常量，应该先出现，然后是私有静态变量，以及私有实体变量。很少会有公共变量
    
    封装
        我们喜欢保持变量和工具函数的私有性，但并不执着于此。有时我们也需要用到protected变量或工具函数，好让测试可以访问到
        有时为了可以测试，会将函数或变量设为protected或者default。然而首先会想办法用private，放松封装总是下策

2.类应该短小
    关于类，最重要的，就是短小。在设计类是，首条规则就是要更短小，那么多大合适呢？
    
    单一职责原则(SRP)认为，类或模块应该有且只有一条加以修改的理由。该原则即给出了职责的定义，又是关于类的长度的指导方针。类只应有一个职责
