什么都比不上放置良好的注释来的有用。
什么也不会比乱七八糟的注释更有本事搞乱一个模块。
什么也不会比陈旧、提供错误信息的注释更有破坏性。

注释的恰当用法是弥补我们在用代码表达意图时遭遇的失败
    当我们无法用代码表达自己的意图时，我们不得不使用注释来弥补这一过失
    程序员应当负责将注释保持在可维护、有关联、精确的 高度。但是更重要的是写清楚代码，来保证无须太多的注释
    
注释不能美化糟糕的代码
    写注释的常见原因之一是糟糕代码的存在--我们编写一个模块，发现它杂乱不堪，于是我们想写注释，来帮助看懂它
        但是我们更该做的事是把代码弄干净。带有少量注释的整洁代码，要比带有大量注释的复杂代码好得多

好的注释
    用于留下必要信息
    解释意图
    将用代码无法解释的内容表达清楚
    警示接手代码的人，该做什么不该做什么
    
TODO注释
    通常是作为应该做，但是目前还没做的。
    IDE有自检功能可以找到这个注释
    少量的这个注释可以帮助找到正在工作的地方
    因此需要定期的查看，删除不需要的注释
    
删除多余的注释
    对于没有明确的意图，或者莫名其妙的规范而加的注释，还是删除的好
    
注释掉的代码
    谁也不知道这注释掉的代码还有没有用
    接手的人也不敢删，因此又臭又长，影响阅读。
