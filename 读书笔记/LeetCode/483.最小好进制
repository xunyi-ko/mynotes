
// 有点极端
// 执行用时 :4 ms, 在所有 Java 提交中击败了100%的用户
// 内存消耗 :33.7 MB, 在所有 Java 提交中击败了100.00%的用户
class Solution {
    public String smallestGoodBase(String n) {
        long v = Long.valueOf(n);
        
		long left = 2;
		long right;
		long mid;
		long value;
		for(int j = (int) (Math.log(v + 1) / Math.log(2)); j > 2; j--){
			right = (int)(Math.pow(v, 1.0/(j - 1)) + 1);
			while(left < right){
				mid = (right + left) >>> 1;
				value = calcValue(mid, j);
                
				if(value == v){
					return String.valueOf((right + left) >>> 1);
				}else if(value > v){
					right = mid-1;
				}else{
					left = mid+1;
				}
			}
		}
		return String.valueOf(v - 1);
    }
	
	public long calcValue(long v, int nums){
		long res = 1;
		for(int i = 1; i < nums; i++){
			res = res * v + 1;
		}
		return res;
	}
}
