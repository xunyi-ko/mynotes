@Test
    public void lengthOfLongestSubstringTest() {
    	System.out.println(lengthOfLongestSubstring("abcabcbb"));
    }
    /**
     * 	给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。
     * @param s
     * @return
     */
//    public int lengthOfLongestSubstring(String s) {
//        int length = s.length();
//        int res = 0;
//        for(int i = 0; i < length; i++) {
//        	String max = "";
//        	for(int j = i; j < length; j++) {
//        		if(max.contains(String.valueOf(s.charAt(j)))) {
//        			break;
//        		}else {
//        			max += s.charAt(j);
//        		}
//        	}
//        	res = max(res,max.length());
//        }
//        return res;
//    }
    //128个字符，每次先从索引里查找字符，如果有，则取出位置，并把当前位置放进去，这样就可以得到当前的不重复子串的长度
    public int lengthOfLongestSubstring(String s) {
        int n = s.length(), ans = 0;
        int[] index = new int[128]; // current index of character
        // try to extend the range [i, j]
        for (int j = 0, i = 0; j < n; j++) {
            i = Math.max(index[s.charAt(j)], i);
            ans = Math.max(ans, j - i + 1);
            index[s.charAt(j)] = j + 1;
        }
        return ans;
    }
