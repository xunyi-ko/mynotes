给定 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai) 。
在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。
找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。

说明：你不能倾斜容器，且 n 的值至少为 2

最简单暴力的方式
class Solution {
    public int maxArea(int[] height) {
        int size = height.length;
        int max = 0;
        for(int i = 0; i < size; i++) {
        	for(int j = i + 1; j < size; j++) {
        		max = Math.max((j - i) * Math.min(height[i], height[j]) , max);
        	}
        }
		return max;
    }
}
时间复杂度是O(n^2/2)

另一种方法
用两个数，分别记录两端的位置。让其中较短的一条向较长的移动
由于计算面积是用两条线段中较短的一条乘以宽度，所以如果移动长的，宽度减少，面积不可能增加
class Solution {
    public int maxArea(int[] height) {
        int max = 0;
		int rightPtr = height.length - 1;
		int leftPtr = 0;
		while(leftPtr < rightPtr) {
			if(height[leftPtr] > height[rightPtr]) {
				max = Math.max((rightPtr - leftPtr) * height[rightPtr], max);
				rightPtr--;
			}else {
				max = Math.max((rightPtr - leftPtr) * height[leftPtr], max);
				leftPtr++;
			}
		}
		return max;
    }
}
时间复杂度O(n)
